---
# TODO: use `check_mode: yes` to check and stop Jenkins only if configs will be changed
- import_tasks: service/stop.yml

- name: Set Jenkins Java options
  lineinfile:
    dest: /usr/lib/systemd/system/jenkins.service
    regexp: '^Environment="JAVA_OPTS='
    line: "Environment=\"JAVA_OPTS={{ jenkins_java_options }}\""
  register: java_options_task
  notify:
    - Reload Jenkins service

- name: Set pending reload variable
  set_fact:
    pending_reload: true
  when: java_options_task.changed

- name: Copy main config file
  template:
    src: config.xml.j2
    dest: "{{ jenkins_home }}/config.xml"
    owner: jenkins
    group: jenkins
    mode: 0644
  notify:
    - Restart Jenkins service

- name: Copy location config file
  template:
    src: jenkins.model.JenkinsLocationConfiguration.xml.j2
    dest: "{{ jenkins_home }}/jenkins.model.JenkinsLocationConfiguration.xml"
    owner: jenkins
    group: jenkins
    mode: 0644
  notify:
    - Restart Jenkins service

- name: Create users directory
  file:
    path: "{{ jenkins_home }}/users"
    state: directory
    owner: jenkins
    group: jenkins
    mode: 0755
  notify:
    - Restart Jenkins service

- name: Copy users config file
  template:
    src: users/users.xml.j2
    dest: "{{ jenkins_home }}/users/users.xml"
    owner: jenkins
    group: jenkins
    mode: 0755
  notify:
    - Restart Jenkins service

- name: Create admin user directory
  file:
    path: "{{ jenkins_home }}/users/{{ jenkins_user }}"
    state: directory
    owner: jenkins
    group: jenkins
    mode: 0700
  notify:
    - Restart Jenkins service

- name: Copy admin user config file
  template:
    src: users/user_config.xml.j2
    dest: "{{ jenkins_home }}/users/{{ jenkins_user }}/config.xml"
    owner: jenkins
    group: jenkins
    mode: 0644
  notify:
    - Restart Jenkins service
